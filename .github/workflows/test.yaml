name: Test

on:
    push:
        branches:
    pull_request:
        branches:

jobs:
    test:
        name: PHP ${{ matrix.php-version }} + ${{ matrix.dependencies }} + ${{ matrix.variant }}

        runs-on: ubuntu-latest

        continue-on-error: ${{ matrix.allowed-to-fail }}

        strategy:
            matrix:
                php-version:
                    - '7.1'
                    - '7.2'
                    - '7.3'
                    - '7.4'
                dependencies: [highest]
                allowed-to-fail: [false]
                variant: [normal]
                include:
                    - php-version: '7.1'
                      dependencies: lowest
                      allowed-to-fail: false
                      variant: normal
                    - php-version: '8.0'
                      dependencies: highest
                      allowed-to-fail: true
                      variant: normal

        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Install PHP with extensions
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php-version }}
                  coverage: xdebug
                  tools: composer:v2
                  extensions: zlib, xmlwriter

            - name: Install variant
              if: matrix.variant != 'normal'
              run: composer require ${{ matrix.variant }} --no-update

            - name: "Install Composer dependencies (${{ matrix.dependencies }})"
              uses: "ramsey/composer-install@v1"
              with:
                  dependency-versions: "${{ matrix.dependencies }}"
                  composer-options: "--prefer-dist --prefer-stable"

            - name: Run Tests
              run: vendor/bin/phpunit --coverage-clover build/coverage-clover.xml

            - name: Send coverage results to Scrutinizer CI
              run: |
                wget https://scrutinizer-ci.com/ocular.phar
                php ocular.phar code-coverage:upload --format=php-clover build/coverage-clover.xml

            - name: Send coverage results to Coveralls
              env:
                COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                composer global require php-coveralls/php-coveralls
                php-coveralls --coverage_clover=build/coverage-clover.xml -v -c .coveralls.yml
